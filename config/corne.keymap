/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;// repeat on tap-into-hold
    hold-trigger-key-positions = <0>;// tap on interrupt
};

/* Layers */

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3
#define BLUETOOTH_L 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ca_a {
            bindings = <&ma_a>;
            key-positions = <13 20>;
        };

        ca_A {
            bindings = <&ma_A>;
            key-positions = <13 20 19>;
        };

        ca_e {
            bindings = <&ma_e>;
            key-positions = <20 15>;
        };

        ca_E {
            bindings = <&ma_E>;
            key-positions = <20 16 15>;
        };

        ca_i {
            bindings = <&ma_i>;
            key-positions = <21 15>;
        };

        ca_I {
            bindings = <&ma_I>;
            key-positions = <21 15 16>;
        };

        ca_o {
            bindings = <&ma_o>;
            key-positions = <22 15>;
        };

        ca_O {
            bindings = <&ma_O>;
            key-positions = <22 15 16>;
        };

        ca_u {
            bindings = <&ma_u>;
            key-positions = <9 15>;
        };

        ca_U {
            bindings = <&ma_U>;
            key-positions = <9 15 16>;
        };

        ca_n {
            bindings = <&ma_n>;
            key-positions = <19 15>;
        };

        ca_N {
            bindings = <&ma_N>;
            key-positions = <19 15 16>;
        };

        new_combo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };
    };

    macros {
        ma_a: ma_a {
            compatible = "zmk,behavior-macro";
            label = "ma_a";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_A: ma_A {
            compatible = "zmk,behavior-macro";
            label = "ma_A";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_e: ma_e {
            compatible = "zmk,behavior-macro";
            label = "ma_e";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_E: ma_E {
            compatible = "zmk,behavior-macro";
            label = "ma_E";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N1>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_i: ma_i {
            compatible = "zmk,behavior-macro";
            label = "ma_i";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_I: ma_I {
            compatible = "zmk,behavior-macro";
            label = "ma_I";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_o: ma_o {
            compatible = "zmk,behavior-macro";
            label = "ma_o";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_O: ma_O {
            compatible = "zmk,behavior-macro";
            label = "ma_O";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N1>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_u: ma_u {
            compatible = "zmk,behavior-macro";
            label = "ma_u";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_U: ma_U {
            compatible = "zmk,behavior-macro";
            label = "ma_U";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_n: ma_n {
            compatible = "zmk,behavior-macro";
            label = "ma_n";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp RALT>;
        };
        ma_N: ma_N {
            compatible = "zmk,behavior-macro";
            label = "ma_N";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N9>,
                <&macro_release>,
                <&kp RALT>;
        };
    };

    prog_caps: behavior_prog_caps_word {
        compatible = "zmk,behavior-caps-word";
        label = "PROG_CAPS";
        #binding-cells = <0>;
        continue-list = <UNDERSCORE>;
    };

    &caps_word {
        continue-list = <UNDERSCORE MINUS BACKSPACE>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp ESC       &kp Q        &kp W       &kp F        &kp P      &kp B           &kp J        &kp L       &kp U        &kp Y   &kp EQUAL  &mt LC(BSPC) BSPC
 &kp SQT  &hm LCMD A  &hm LCTRL R  &hm LALT S  &hm LSHFT T      &kp G           &kp M  &hm RSHFT N  &hm RALT E  &hm RCTRL I  &hm RCMD O            &kp RET
 &kp TAB       &kp Z        &kp X       &kp C        &kp D      &kp V           &kp K        &kp H   &kp COMMA      &kp DOT    &kp SEMI           &kp FSLH
                                     &kp LCMD    &kp LSHFT  &kp LCTRL           &to 1    &kp SPACE       &to 3
            >;
        };

        symbols_layer {
            bindings = <
   &kp ESC  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT          &kp CARET   &kp AMPS  &kp STAR  &kp MINUS     &none  &mt LC(BSPC) BSPC
 &kp GRAVE     &none   &none     &none      &none   &kp PLUS           &kp HOME   &kp LBRC  &kp RBRC    &kp END  &kp BSLH            &kp RET
   &kp TAB     &none   &none     &none      &none  &kp MINUS           &kp LBKT   &kp LPAR  &kp RPAR   &kp RBKT     &none              &to 2
                              &kp LCMD  &kp LSHFT      &to 0              &none  &kp SPACE     &to 3
            >;
        };

        arrows_layer {
            bindings = <
 &kp ESC  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_CLR                  &none             &none            &none          &none   &none  &mt LC(BSPC) BSPC
   &none         &none      &kp C_PP  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP          &mt HOME LEFT  &mt LC(END) DOWN  &mt LC(HOME) UP  &mt END RIGHT   &none            &kp RET
 &kp TAB         &none         &none    &kp C_PREV    &kp C_NEXT  &kp C_BRI_DN                  &none             &none            &none          &none   &none    &mt LC(DEL) DEL
                                          &kp LCMD     &kp LSHFT         &to 0                  &to 1         &kp SPACE            &to 3
            >;
        };

        numbers_layer {
            bindings = <
 &kp ESC   &none   &none     &none      &none      &none               &none  &mt F7 N7  &mt F8 N8  &mt F9 N9      &none  &mt LC(BSPC) BSPC
   &none   &none   &none     &none   &kp STAR   &kp PLUS           &kp EQUAL  &mt F4 N4  &mt F5 N5  &mt F6 N6    &kp DOT            &kp RET
 &kp TAB   &none   &none     &none   &kp FSLH  &kp MINUS          &mt F10 N0  &mt F1 N1  &mt F2 N2  &mt F3 N3  &kp COMMA              &to 2
                          &kp LCMD  &kp LSHFT      &to 0               &to 1  &kp SPACE      &none
            >;
        };

        bluetooth_layer {
            bindings = <
 &bootloader  &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0          &bt BT_SEL 3  &bt BT_CLR  &trans  &trans  &trans  &bootloader
      &trans  &trans  &trans  &trans      &trans  &bt BT_SEL 1          &bt BT_SEL 4      &trans  &trans  &trans  &trans       &trans
      &trans  &trans  &trans  &trans      &trans  &bt BT_SEL 2          &bt BT_SEL 5      &trans  &trans  &trans  &trans       &trans
                              &trans      &trans        &trans                &trans      &trans  &trans
            >;
        };
    };
};
