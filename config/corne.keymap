/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;// repeat on tap-into-hold
    hold-trigger-key-positions = <0>;// tap on interrupt
};

/* Layers */

#define DEF  0
#define DEV  1
#define A+N  2
#define STG  3

/* Custom Keys */
#define NAV_LEFT    &mt HOME     LEFT    // tap: left      | long-tap: beginning of line
#define NAV_RIGHT   &mt END      RIGHT   // tap: right     | long-tap: end       of line
#define NAV_UP      &mt LC(HOME) UP      // tap: up        | long-tap: beginning of document
#define NAV_DOWN    &mt LC(END)  DOWN    // tap: down      | long-tap: end       of document
#define NAV_BSPC    &mt LC(BSPC) BSPC    // tap: bspc      | long-tap: delete word backward
#define NAV_DEL     &mt LC(DEL)  DEL     // tap: del       | long-tap: delete word forward
#define NAV_PREV    &mt RC(PG_UP) PG_DN  // tap: page down | long-tap: previous tab
#define NAV_NEXT    &mt RC(PG_DN) PG_UP  // tap: page up   | long-tap: next     tab

#define KEY_UNDO    &kp RC(Z)            // tap: undo
#define KEY_REDO    &kp RC(Y)            // tap: redo
#define KEY_CUT     &kp RC(X)            // tap: cut
#define KEY_COPY    &kp RC(C)            // tap: copy
#define KEY_PASTE   &mt RC(V) RC(RS(V))  // tap: paste  | long-tap: paste without format
#define KEY_RET     &mt F2 RET           // tap: return | long-tap: rename (like macOs)

#define ZOOM_IN     &kp RC(PLUS)         // tap: zoom in
#define ZOOM_RST    &kp RC(N0)           // tap: zoom reset
#define ZOOM_OUT    &kp RC(MINUS)        // tap: zoom out

#define CANCEL      &kp K_CANCEL         // cancel caps-word and num-word
#define DSK_PREV    &kp LG(LC(LEFT))     // previous desktop
#define DSK_NEXT    &kp LG(LC(RIGHT))    // next     desktop

/ {
    behaviors {
        #include "morph/shared.dtsi"
        #include "morph/base.dtsi"
        #include "morph/accents.dtsi"
        #include "morph/num.dtsi"
        #include "morph/actions.dtsi"
        #include "morph/dev.dtsi"
    };

    combos {
        compatible = "zmk,combos";

        /* Modifier Keys */
        #define L_CTRL    14
        #define L_ALT     15
        #define L_SHFT    16
        #define R_SHFT    19
        #define R_ALT     20
        #define R_CTRL    21

        #include "combos/shared.dtsi"
        #include "combos/accents.dtsi"
        #include "combos/base.dtsi"
        #include "combos/dev.dtsi"
    };

    macros {
        #include "macros/accents.dtsi"
        #include "macros/num.dtsi"
        #include "macros/dev.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
 &kp ESC       &kp Q        &kp W       &kp F        &kp P    &kp B            &kp J        &kp L       &kp U        &kp Y      &mp_ko   &mp_bd
  &mp_bc  &hm LCMD A  &hm LCTRL R  &hm LALT S  &hm LSHFT T    &kp G            &kp M  &hm RSHFT N  &hm RALT E  &hm RCTRL I  &hm RCMD O  KEY_RET
 &kp TAB       &kp Z        &kp X       &kp C        &kp D    &kp V            &kp K        &kp H    &mp_d_cs     &mp_d_dc      &mp_kl   &mp_kb
                                       &mp_kq    &kp SPACE  &to DEV          &to A+N    &kp SPACE     &to STG
            >;
        };

        dev_layer {
            bindings = <
   &kp ESC     &kp AT  &kp POUND   &mp_d_m    &mp_d_p    &kp DQT          &kp TILDE    &mp_k_m  &kp UNDER  &kp PRCNT  &kp CARET       &mp_bd
    &mp_bc  &mp_d_lao   &kp LBRC  &kp RBRC    &mp_d_e    &kp SQT          &kp GRAVE      &none   &kp LBKT   &kp RBKT  &mp_d_loo      KEY_RET
   &kp TAB     &mp_kn   &kp LPAR  &kp RPAR    &mp_d_a   &kp BSLH           &kp FSLH      &none   &mp_d_lt   &mp_d_gt      &none  &key_repeat
                                  &mp_d_cs  &kp SPACE    &to DEF            &to A+N  &kp SPACE   &mp_d_dc
            >;
        };

        act_num_layer {
            bindings = <
 &kp ESC    NAV_PREV  DSK_PREV    NAV_UP   DSK_NEXT   NAV_NEXT            &kp KP_PLUS  &mp_kn_f9  &mp_kn_f10  &mp_kn_f11  &mp_kn_f12       &mp_bd
  &mp_bc   &kp PSCRN  NAV_LEFT  NAV_DOWN  NAV_RIGHT    &mp_kbd                &mp_k_m  &mp_kn_f5   &mp_kn_f6   &mp_kn_f7   &mp_kn_f8      KEY_RET
 &kp TAB    KEY_UNDO   KEY_CUT  KEY_COPY  KEY_PASTE   KEY_REDO              &kp KP_N0  &mp_kn_f1   &mp_kn_f2   &mp_kn_f3   &mp_kn_f4  &key_repeat
                                  &mp_kn  &kp SPACE    &to DEF                &to DEV  &kp SPACE  &kp KP_DOT
            >;
        };

        settings_layer {
            bindings = <
 &bootloader  &none    &bt BT_PRV    &bt BT_CLR    &bt BT_NXT   ZOOM_IN          &kp C_VOL_UP         &none     &kp C_STOP       &none  &none  &bootloader
      &none   &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  ZOOM_RST            &kp C_MUTE    &kp C_PREV       &kp C_PP  &kp C_NEXT  &none        &none
      &none   &none  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5  ZOOM_OUT          &kp C_VOL_DN         &none  &kp C_SHUFFLE       &none  &none        &none
                                          &none  &kp C_BRI_DN   &to DEF               &to DEV  &kp C_BRI_UP        &to A+N
            >;
        };
    };
};
