/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;               // repeat on tap-into-hold
    hold-trigger-key-positions = <0>;   // tap on interrupt
};

/* Layers */
#define DEF  0
#define DEV  1
#define AYN  2
#define STG  3

#define H_DEF  F16
#define H_DEV  F17
#define H_AYN  F18
#define H_STG  F19

#define F_DEF  F20
#define F_DEV  F21
#define F_AYN  F22
#define F_STG  F23

/* Shared Keys */
#define KEY_ESC     &to_DEF_kp  0         ESC    // tap: esc       | long-tap: DEF layer
#define KEY_TAB     &mt         RIGHT     TAB    // tap: tab       | long-tap: right (terminal autocompletion)
#define KEY_RET     &mt         F2        RET    // tap: return    | long-tap: rename (like macOs)
#define KEY_SPC     &kp         SPACE
#define NAV_BSPC    &mt         LC(BSPC)  BSPC   // tap: bspc      | long-tap: delete word backward
#define NAV_DEL     &mt         LC(DEL)   DEL    // tap: del       | long-tap: delete word forward

/ {
    behaviors {
        #include "morph/shared.dtsi"
        #include "morph/base.dtsi"
        #include "morph/num.dtsi"
        #include "morph/actions.dtsi"
        #include "morph/dev.dtsi"

        #include "hold/shared.dtsi"
        #include "hold/dev.dtsi"
        #include "hold/num.dtsi"
    };

    combos {
        compatible = "zmk,combos";

        #include "combos/shared.dtsi"
        #include "combos/help.dtsi"
    };

    macros {
        #include "macros/shared.dtsi"
        #include "macros/dev.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            #define B13  &hm LCMD   A
            #define B14  &hm LCTRL  R
            #define B15  &hm LALT   S
            #define B16  &hm LSHFT  T

            #define B19  &hm RSHFT  N
            #define B20  &hm RALT   E
            #define B21  &hm RCTRL  I
            #define B22  &hm RCMD   O

            #define B36  &mo_STGDEF_to_STG  0 0
            #define B38  &mo_AYNDEF_to_DEV  0 0
            #define B39  &mo_AYNDEF_to_AYN  0 0
            #define B41  &mp_kq

            label = "DEFAULT";
            bindings = <
    KEY_ESC  &kp Q  &kp W  &kp F    &kp P  &kp B             &kp J    &kp L     &kp U     &kp Y   &mp_k_m     &mp_bd
     &mp_bc    B13    B14    B15      B16  &kp G             &kp M      B19       B20       B21       B22    KEY_RET
    KEY_TAB  &kp Z  &kp X  &kp C    &kp D  &kp V             &kp K    &kp H  &mp_d_cs  &mp_d_dc  &kp FSLH  &kp EQUAL
                             B36  KEY_SPC    B38               B39  KEY_SPC       B41
            >;
        };

        dev_layer {
            #define D13  &hm_d_lcmd LCMD    0
            #define D14  &hm        LCTRL   LBRC
            #define D15  &hm        LALT    RBRC
            #define D16  &hm_d_lshf LSHFT   0

            #define D19  &hm_d_rshf RSHFT   0
            #define D20  &hm        RALT    LBKT
            #define D21  &hm        RCTRL   RBKT
            #define D22  &hm_d_rcmd RCMD    0

            #define D38  &mo_AYNDEV_to_DEF  0 0
            #define D39  &mo_AYNDEV_to_AYN  0 0

            label = "DEV";
            bindings = <
    KEY_ESC     &kp AT  &kp POUND  &kp DLLR  &mp_d_p    &kp DQT          &kp TILDE   &mp_d_m  &kp UNDER  &kp PRCNT  &kp CARET     &mp_bd
     &mp_bc        D13        D14       D15      D16    &kp SQT          &kp GRAVE       D19        D20        D21        D22    KEY_RET
    KEY_TAB  &kp LC(R)   &kp LPAR  &kp RPAR  &mp_d_a   &kp BSLH           &kp FSLH  &mp_d_qs     &kp LT     &kp GT   &mp_d_ql    &kp F12
                                   &mp_d_cs  KEY_SPC        D38                D39   KEY_SPC   &mp_d_dc
            >;
        };

        act_num_layer {
            #define A01  &kp LG(PAUSE_BREAK)    // tap: system info
            #define A05  &kp LC(LA(DEL))        // tap: windows security
            #define A13  &hm LCMD    PSCRN
            #define A14  &hm LCTRL   LEFT
            #define A15  &hm LALT    DOWN
            #define A16  &hm LSHFT   RIGHT
            #define A17  &kp LG(E)              // tap: file explorer

            #define A19  &hm_n_rshf  RSHFT  0
            #define A20  &hm_n_ralt  RALT   0
            #define A21  &hm_n_rctrl RCTRL  0
            #define A22  &hm_n_rcmd  RCMD   0

            #define A36  &mo_STGAYN_to_STG  0 0
            #define A38  &to_DEF
            #define A39  &to_DEV

            #define KEY_UNDO    &kp RC(Z)       // tap: undo
            #define KEY_REDO    &kp RC(Y)       // tap: redo
            #define KEY_CUT     &kp RC(X)       // tap: cut
            #define KEY_COPY    &kp RC(C)       // tap: copy
            #define KEY_PASTE   &kp RC(V)       // tap: paste     | shift: paste without format

            label = "ACTIONS / NUMBERS";
            bindings = <
    KEY_ESC         A01  &mp_a_prev    &kp UP  &mp_a_next        A05            &kp KP_PLUS  &mp_kn_f9  &mp_kn_f10  &mp_kn_f11  &mp_kn_f12       &mp_bd
     &mp_bc         A13         A14       A15         A16        A17                &mp_k_m        A19         A20         A21         A22      KEY_RET
    KEY_TAB    KEY_UNDO     KEY_CUT  KEY_COPY   KEY_PASTE   KEY_REDO                 &kp N0  &mp_kn_f1   &mp_kn_f2   &mp_kn_f3   &mp_kn_f4  &key_repeat
                                          A36     KEY_SPC        A38                    A39    KEY_SPC     &kp DOT
            >;
        };

        settings_layer {
            #define ZOOM_IN     &kp RC(PLUS)         // tap: zoom in
            #define ZOOM_RST    &kp RC(N0)           // tap: zoom reset
            #define ZOOM_OUT    &kp RC(MINUS)        // tap: zoom out

            label = "SETTINGS";
            bindings = <
    KEY_ESC  &none    &bt BT_PRV    &bt BT_CLR    &bt BT_NXT   ZOOM_IN          &kp C_VOL_UP         &none     &kp C_STOP       &none  &none  &none
      &none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  ZOOM_RST            &kp C_MUTE    &kp C_PREV       &kp C_PP  &kp C_NEXT  &none  &none
      &none  &none  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5  ZOOM_OUT          &kp C_VOL_DN      &kp C_RW  &kp C_SHUFFLE    &kp C_FF  &none  &none
                                  &kp C_BRI_DN       KEY_SPC   &to_DEF               &to_DEV       KEY_SPC   &kp C_BRI_UP
            >;
        };
    };
};
