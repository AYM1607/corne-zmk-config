/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;               // repeat on tap-into-hold
    hold-trigger-key-positions = <0>;   // tap on interrupt
};

/* Layers */
#define BAS  0
#define DEV  1
#define AXN  2
#define FNK  3
#define STG  4

#define H_BAS  F13
#define H_DEV  F14
#define H_AXN  F15
#define H_FNK  F16
#define H_STG  F17

#define H_CWR  F18

#define F_BAS  F19
#define F_DEV  F20
#define F_AXN  F21
#define F_FNK  F22
#define F_STG  F23

/* Shared Keys */
#define KEY_ESC     &to_BAS_kp  0         ESC    // tap: esc       | long-tap: BAS layer
#define KEY_TAB     &mt         RIGHT     TAB    // tap: tab       | long-tap: right (terminal autocompletion)
#define KEY_RET     &mt         F2        RET    // tap: return    | long-tap: rename (like macOs)
#define KEY_SPC     &kp         SPACE
#define NAV_BSPC    &mt         LC(BSPC)  BSPC   // tap: bspc      | long-tap: delete word backward
#define NAV_DEL     &mt         LC(DEL)   DEL    // tap: del       | long-tap: delete word forward

/ {
    behaviors {
        #include "morph/shared.dtsi"

        #include "morph/base.dtsi"
        #include "morph/actions.dtsi"
        #include "morph/num.dtsi"
        #include "morph/dev.dtsi"

        #include "hold/shared.dtsi"
        #include "hold/actions.dtsi"
        #include "hold/dev.dtsi"
    };

    combos {
        compatible = "zmk,combos";

        #include "combos/base.dtsi"
        #include "combos/help.dtsi"
    };

    macros {
        #include "macros/shared.dtsi"
        #include "macros/dev.dtsi"
        #include "macros/settings.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp EQUAL    &kp BSPC
   &kp SQT   &kp A &kp R &kp S &hm LCMD T &kp G   &kp M &hm LCMD N  &kp E     &kp I   &kp O       &kp RET
   &kp TAB &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT   &kp SEMI   &kp FSLH
                  &kp LCMD &kp LSHFT &kp LCTRL   &to SYMBOLS_L &kp SPACE &to NUMBERS_L
                        >;
                };

        dev_layer {
            #define D13  &hm_d_lcmd LCMD    0
            #define D14  &hm        LCTRL   LBRC
            #define D15  &hm        LALT    RBRC
            #define D16  &hm_d_lshf LSHFT   0

            #define D19  &hm_d_rshf RSHFT   0
            #define D20  &hm        RALT    LBKT
            #define D21  &hm        RCTRL   RBKT
            #define D22  &hm_d_rcmd RCMD    0

            #define D38  &mo_AXNDEV_to_BAS  0 0
            #define D39  &mo_AXNDEV_to_AXN  0 0

            label = "DEV";
            bindings = <
    KEY_ESC     &kp AT  &kp POUND  &kp DLLR  &mp_d_p    &kp DQT          &kp TILDE   &mp_d_m  &kp UNDER  &kp PRCNT  &kp CARET    NAV_DEL
     &mp_bc        D13        D14       D15      D16    &kp SQT          &kp GRAVE       D19        D20        D21        D22   NAV_BSPC
    KEY_TAB  &kp LC(R)   &kp LPAR  &kp RPAR  &mp_d_a   &kp BSLH           &kp FSLH  &mp_d_qs     &kp LT     &kp GT   &mp_d_ql    &kp F12
                                     &mp_cs  KEY_SPC        D38                D39   KEY_RET     &mp_dc
            >;
        };

                arrows_layer {
                        bindings = <
   &kp ESC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR            &none &none &none &none &none &kp BSPC
   &none &none   &kp C_PP &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_UP                     &kp LEFT &kp DOWN &kp UP  &kp RIGHT &none &kp RET
   &kp TAB &none   &none   &kp C_PREV &kp C_NEXT &kp C_BRI_DN                         &none &none &none &none &none &none
                    	     &kp LCMD &kp LSHFT   &to DEFAULT_L                        &to SYMBOLS_L &kp SPACE    &to NUMBERS_L
                        >;
                };

        functions_layer {
            #define K13  &kp LCMD
            #define K14  &hm LCTRL  HOME
            #define K15  &hm LALT   PG_DN
            #define K16  &hm LSHFT  END

            #define K19  &hm RSHFT  F5
            #define K20  &hm RALT   F6
            #define K21  &hm RCTRL  F7
            #define K22  &hm RCMD   F8

            #define K36  &to_AXN
            #define K38  &to_BAS
            #define K39  &to_DEV

            label = "FNK";
            bindings = <
    KEY_ESC  &none  &none  &kp PG_UP    &none  &none                  &none   &kp F9  &kp F10  &kp F11  &kp F12   NAV_DEL
     &mp_bc    K13    K14        K15      K16  &none                  &none      K19      K20      K21      K22  NAV_BSPC
    KEY_TAB  &none  &none      &none    &none  &none                  &none   &kp F1   &kp F2   &kp F3   &kp F4    &mp_cs
                                 K36  KEY_SPC    K38                    K39  KEY_RET   &mp_dc
            >;
        };

        settings_layer {
            #define ZOOM_IN     &kp RC(PLUS)         // tap: zoom in
            #define ZOOM_RST    &kp RC(N0)           // tap: zoom reset
            #define ZOOM_OUT    &kp RC(MINUS)        // tap: zoom out

            label = "STG";
            bindings = <
    KEY_ESC  &none  &bt BT_PRV    &bt BT_CLR  &bt BT_NXT   ZOOM_IN          &kp C_VOL_UP         &none     &kp C_STOP       &none  &none  &none
      &none  &none     &m_s_b1       &m_s_b2     &m_s_b3  ZOOM_RST            &kp C_MUTE    &kp C_PREV       &kp C_PP  &kp C_NEXT  &none  &none
      &none  &none     &m_s_b4       &m_s_b5     &m_s_b6  ZOOM_OUT          &kp C_VOL_DN      &kp C_RW  &kp C_SHUFFLE    &kp C_FF  &none  &none
                                &kp C_BRI_DN     KEY_SPC   &to_BAS               &to_DEV       KEY_RET   &kp C_BRI_UP
            >;
        };
    };
};
