// tap:         #
// alt:         °
mp_ad_pound: morph_android_dev_pound {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_pound";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp POUND>, <&kp LC(LS(SEMICOLON))>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         $
// alt:         €
mp_ad_money: morph_android_dev_money {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_money";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp DLLR>, <&kp LC(N5)>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         [
// alt:         «
mp_ad_lb: morph_android_dev_left_brackets {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lb";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp LBKT>, <&kp LC(LBKT)>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         ]
// alt:         »
mp_ad_rb: morph_android_dev_right_brackets {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_rb";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp RBKT>, <&kp LC(RBKT)>;
    keep-mods = <(MOD_LALT)>;
};

// mp_aDEV_a
MORPH_SA(
    a,
    DEV,
    a,
    asterisk,
    MOD_LALT|MOD_RALT,
    &kp ASTRK,  // tap:    *
    &m_ad_ma,   // shift:  *=
    &m_ad_eo    // alt:    **
)

// mp_aDEV_p
MORPH_SA(
    a,
    DEV,
    p,
    plus,
    MOD_LALT|MOD_RALT,
    &kp PLUS,  // tap:    +
    &m_ad_as,  // shift:  +=
    &m_ad_io   // alt:    ++
)

// tap:         -
// shift:       -=
// alt:         --
mp_ad_m_a: morph_android_dev_minus_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_m_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp MINUS>, <&m_ad_do>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_m: morph_android_dev_minus {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_m";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_m_a>, <&m_ad_sa>;
};

// tap:         =
// shift:       ===
// alt:         =>
mp_ad_e_a: morph_android_dev_equal_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_e_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp EQUAL>, <&m_ad_a>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_e: morph_android_dev_equal {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_e";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_e_a>, <&m_ad_se>;
};

// tap:         /
// shift:       /=
// ctrl:        // line comment
// alt:         /* block comment *
mp_ad_s_s: morph_android_dev_slash_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_s_s";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp FSLH>, <&m_ad_da>;
};
mp_ad_s: morph_android_dev_slash {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_s";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&mp_ad_s_s>, <&kp LS(A)>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         &
// shift:       &&=
// alt:         &&
mp_ad_lao_a: morph_android_dev_logical_and_operator_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lao_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp AMPS>, <&m_ad_la>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_lao: morph_android_dev_logical_and_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lao";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_lao_a>, <&m_ad_laa>;
};

// tap:         |
// shift:       ||=
// alt:         ||
mp_ad_loo_a: morph_android_dev_logical_or_operator_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_loo_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp PIPE>, <&m_ad_lo>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_loo: morph_android_dev_logical_or_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_loo";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_loo_a>, <&m_ad_loa>;
};

// mp_aDEV_qs
MORPH_ASS(
    a,
    DEV,
    qs,
    question_symbol,
    MOD_LALT|MOD_RALT,
    &kp QMARK,     // tap:        ?
    &kp LC(FSLH),  // alt:        ¿
    &m_ad_nca,     // shift:      ??=
    &m_ad_nco      // alt+shift:  ??
)

// mp_aDEV_es
MORPH_ASS(
    a,
    DEV,
    es,
    exclamation_symbol,
    MOD_LALT|MOD_RALT,
    &kp EXCL,    // tap:        !
    &kp LC(N1),  // alt:        ¡
    &m_ad_si,    // shift:      !==
    &m_ad_dno    // alt+shift:  !!
)

// tap:         ?.
// shift:       ?░:░
mp_ad_ql: morph_android_dev_question_logical {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_ql";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&m_ad_oco>, <&m_ad_cto>;
};

// tap:         <
// shift:       <=
// alt:         <░/> /* html void tag */
mp_ad_lt_s: morph_android_dev_lower_than_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lt_s";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp LT>, <&m_ad_ltoet>;
};
mp_ad_lt: morph_android_dev_lower_than {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lt";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&mp_ad_lt_s>, <&m_ad_hvt>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         >
// shift:       >=
// alt:         </░> /* html close tag */
mp_ad_gt_s: morph_android_dev_greater_than_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_gt_s";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp GT>, <&m_ad_gtoet>;
};
mp_ad_gt: morph_android_dev_greater_than {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_gt";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&mp_ad_gt_s>, <&m_ad_hct>;
    keep-mods = <(MOD_LALT)>;
};
