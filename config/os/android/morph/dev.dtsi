//mp_aDEV_pound
MORPH_KA(
    a,
    DEV,
    pound,
    pound,
    MOD_LALT|MOD_RALT,
    &kp POUND,             // tap:  #
    &kp LC(LS(SEMICOLON))  // alt:  °
)

//mp_aDEV_money
MORPH_KA(
    a,
    DEV,
    money,
    money,
    MOD_LALT|MOD_RALT,
    &kp DLLR,   // tap:  $
    &kp LC(N5)  // alt:  €
)

//mp_aDEV_lb
MORPH_KA(
    a,
    DEV,
    lb,
    left_brackets,
    MOD_LALT|MOD_RALT,
    &kp LBKT,     // tap:  [
    &kp LC(LBKT)  // alt:  «
)

//mp_aDEV_rb
MORPH_KA(
    a,
    DEV,
    rb,
    right_brackets,
    MOD_LALT|MOD_RALT,
    &kp RBKT,     // tap:  ]
    &kp LC(RBKT)  // alt:  »
)

// mp_aDEV_a
MORPH_KSA(
    a,
    DEV,
    a,
    asterisk,
    MOD_LALT|MOD_RALT,
    &kp ASTRK,  // tap:    *
    &m_ad_ma,   // shift:  *=
    &m_ad_eo    // alt:    **
)

// mp_aDEV_p
MORPH_KSA(
    a,
    DEV,
    p,
    plus,
    MOD_LALT|MOD_RALT,
    &kp PLUS,  // tap:    +
    &m_ad_as,  // shift:  +=
    &m_ad_io   // alt:    ++
)

// mp_aDEV_m
MORPH_KSA(
    a,
    DEV,
    m,
    minus,
    MOD_LALT|MOD_RALT,
    &kp MINUS,  // tap:    -
    &m_ad_sa,   // shift:  -=
    &m_ad_do    // alt:    --
)

// mp_aDEV_e
MORPH_KSA(
    a,
    DEV,
    e,
    equal,
    MOD_LALT|MOD_RALT,
    &kp EQUAL,  // tap:    =
    &m_ad_se,   // shift:  ===
    &m_ad_a     // alt:    =>
)

// mp_aDEV_s
MORPH_KAS(
    a,
    DEV,
    s,
    slash,
    MOD_LALT|MOD_RALT,
    &kp FSLH,   // tap:    /
                // ctrl:   // line comment
    &kp LS(A),  // alt:    /* block comment */
    &m_ad_da    // shift:  /=
)

// tap:         &
// shift:       &&=
// alt:         &&
mp_ad_lao_a: morph_android_dev_logical_and_operator_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lao_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp AMPS>, <&m_ad_la>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_lao: morph_android_dev_logical_and_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lao";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_lao_a>, <&m_ad_laa>;
};

// tap:         |
// shift:       ||=
// alt:         ||
mp_ad_loo_a: morph_android_dev_logical_or_operator_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_loo_a";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp PIPE>, <&m_ad_lo>;
    keep-mods = <(MOD_LALT)>;
};
mp_ad_loo: morph_android_dev_logical_or_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_loo";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_ad_loo_a>, <&m_ad_loa>;
};

// mp_aDEV_qs
MORPH_KASAS(
    a,
    DEV,
    qs,
    question_symbol,
    MOD_LALT|MOD_RALT,
    &kp QMARK,     // tap:        ?
    &kp LC(FSLH),  // alt:        ¿
    &m_ad_nca,     // shift:      ??=
    &m_ad_nco      // alt+shift:  ??
)

// mp_aDEV_es
MORPH_KASAS(
    a,
    DEV,
    es,
    exclamation_symbol,
    MOD_LALT|MOD_RALT,
    &kp EXCL,    // tap:        !
    &kp LC(N1),  // alt:        ¡
    &m_ad_si,    // shift:      !==
    &m_ad_dno    // alt+shift:  !!
)

// tap:         ?.
// shift:       ?░:░
mp_ad_ql: morph_android_dev_question_logical {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_ql";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&m_ad_oco>, <&m_ad_cto>;
};

// tap:         <
// shift:       <=
// alt:         <░/> /* html void tag */
mp_ad_lt_s: morph_android_dev_lower_than_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lt_s";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp LT>, <&m_ad_ltoet>;
};
mp_ad_lt: morph_android_dev_lower_than {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_lt";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&mp_ad_lt_s>, <&m_ad_hvt>;
    keep-mods = <(MOD_LALT)>;
};

// tap:         >
// shift:       >=
// alt:         </░> /* html close tag */
mp_ad_gt_s: morph_android_dev_greater_than_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_gt_s";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp GT>, <&m_ad_gtoet>;
};
mp_ad_gt: morph_android_dev_greater_than {
    compatible = "zmk,behavior-mod-morph";
    label = "mp_ad_gt";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&mp_ad_gt_s>, <&m_ad_hct>;
    keep-mods = <(MOD_LALT)>;
};
